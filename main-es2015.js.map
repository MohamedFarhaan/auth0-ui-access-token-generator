{"version":3,"sources":["./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/loading/loading.component.ts","./src/app/components/loading/loading.component.html","./src/app/app-routing.module.ts","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<div class=\"container\" *ngIf=\"auth.isLoading$ | async; else loaded\">\n  <app-loading></app-loading>\n</div>\n\n<ng-template #loaded>\n  <!-- <app-hero></app-hero>\n  <app-home-content></app-home-content> -->\n  <b>Access token </b> <p style=\"word-break: break-all;\">{{accessToken}}</p>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent {\n  accessToken: string = '...';\n  constructor(public auth: AuthService) {}\n\n  ngOnInit() {\n    this.auth.isAuthenticated$.subscribe({\n      next: (isAuthenticated) => {\n        isAuthenticated && this.auth.getAccessTokenSilently().subscribe(token => {\n          this.accessToken = token;\n        });\n      }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport config from '../../auth_config.json';\n\nconst { domain, clientId, audience, apiUri, errorPath } = config as {\n  domain: string;\n  clientId: string;\n  audience?: string;\n  apiUri: string;\n  errorPath: string;\n};\n\nexport const environment = {\n  production: false,\n  auth: {\n    domain,\n    clientId,\n    ...(audience && audience !== 'YOUR_API_IDENTIFIER' ? { audience } : null),\n    redirectUri: window.location.origin,\n    errorPath,\n  },\n  httpInterceptor: {\n    allowedList: [`${apiUri}/*`],\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Auth0 Angular SDK Sample';\n\n  constructor() {}\n}\n","<div class=\"d-flex flex-column h-100\">\n  <app-nav-bar></app-nav-bar>\n\n  <div class=\"container flex-grow-1 flex-shrink-1\">\n    <router-outlet></router-outlet>\n  </div>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\nimport json from 'highlight.js/lib/languages/json';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { LoadingComponent } from './components/loading/loading.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthHttpInterceptor, AuthModule } from '@auth0/auth0-angular';\nimport { environment as env } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavBarComponent,\n    LoadingComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    HighlightModule,\n    FontAwesomeModule,\n    AuthModule.forRoot({\n      ...env.auth,\n      httpInterceptor: {\n        ...env.httpInterceptor,\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthHttpInterceptor,\n      multi: true,\n    },\n    {\n      provide: Window,\n      useValue: window,\n    },\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: {\n        coreLibraryLoader: () => import('highlight.js/lib/highlight'),\n        languages: {\n          json: () => import('highlight.js/lib/languages/json'),\n        },\n      },\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { faUser, faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css'],\n})\nexport class NavBarComponent {\n  isCollapsed = true;\n  faUser = faUser;\n  faPowerOff = faPowerOff;\n\n  constructor(\n    public auth: AuthService,\n    @Inject(DOCUMENT) private doc: Document\n  ) {}\n\n\n  loginWithRedirect() {\n    this.auth.loginWithRedirect();\n  }\n\n  logout() {\n    this.auth.logout({ returnTo: this.doc.location.origin });\n  }\n}\n","<div class=\"nav-container\">\n  <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\n    <div class=\"container\">\n      <div class=\"navbar-brand\"></div>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        [attr.aria-expanded]=\"!isCollapsed\"\n        aria-label=\"Toggle navigation\"\n        (click)=\"isCollapsed = !isCollapsed\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div\n        class=\"collapse navbar-collapse\"\n        id=\"navbarNav\"\n        [ngbCollapse]=\"isCollapsed\"\n      >\n\n        <ul class=\"navbar-nav d-none d-md-block\">\n          <!-- Login button: show if NOT authenticated -->\n          <li\n            class=\"nav-item\"\n            *ngIf=\"(auth.isAuthenticated$ | async) === false\"\n          >\n            <button\n              id=\"qsLoginBtn\"\n              class=\"btn btn-primary btn-margin\"\n              (click)=\"loginWithRedirect()\"\n            >\n              Log in\n            </button>\n          </li>\n          <!-- / Login button -->\n\n          <!-- Fullsize dropdown: show if authenticated -->\n          <li\n            class=\"nav-item dropdown\"\n            *ngIf=\"auth.user$ | async as user\"\n            ngbDropdown\n          >\n            <a\n              ngbDropdownToggle\n              class=\"nav-link dropdown-toggle\"\n              id=\"profileDropDown\"\n              data-toggle=\"dropdown\"\n            >\n              <!-- Profile image should be set to the profile picture from the id token -->\n              <img\n                [src]=\"user.picture\"\n                alt=\"Profile picture\"\n                class=\"nav-user-profile rounded-circle\"\n                style=\"width: 75px;\"\n              />\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-left\" ngbDropdownMenu>\n              <!-- Show the user's full name from the id token here -->\n              <div class=\"dropdown-header\">\n                {{ user.name }}\n              </div>\n              <button\n                (click)=\"logout()\"\n                class=\"btn btn-link dropdown-item\"\n                id=\"qsLogoutBtn\"\n              >\n                <fa-icon [icon]=\"faPowerOff\" class=\"mr-3\"></fa-icon> Log out\n              </button>\n            </div>\n          </li>\n          <!-- /Fullsize dropdown -->\n        </ul>\n\n        <!-- Responsive login button: show if NOT authenticated -->\n        <ul\n          class=\"navbar-nav d-md-none\"\n          *ngIf=\"(auth.isAuthenticated$ | async) === false\"\n        >\n          <button\n            class=\"btn btn-primary btn-block\"\n            id=\"qsLoginBtn\"\n            (click)=\"loginWithRedirect()\"\n          >\n            Log in\n          </button>\n        </ul>\n        <!-- /Responsive login button -->\n\n        <!-- Responsive profile dropdown: show if authenticated -->\n        <ul\n          class=\"navbar-nav d-md-none justify-content-between\"\n          *ngIf=\"auth.user$ | async as user\"\n          style=\"min-height: 170px;\"\n        >\n          <li class=\"nav-item\">\n            <span class=\"user-info\">\n              <!-- Profile image should be set to the profile picture from the id token -->\n              <img\n                alt=\"Profile picture\"\n                class=\"nav-user-profile d-inline-block rounded-circle mr-3\"\n                style=\"width: 75px;\"\n                [src]=\"user.picture\"\n              />\n              <!-- Show the user's full name from the id token here -->\n              <h6 class=\"d-inline-block\">{{ user.name }}</h6>\n            </span>\n          </li>\n\n          <li>\n            <fa-icon [icon]=\"faPowerOff\" class=\"mr-3\"></fa-icon>\n            <button\n              class=\"btn btn-link p-0\"\n              id=\"qsLogoutBtn\"\n              (click)=\"logout()\"\n            >\n              Log out\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"loading\">\n  <img src=\"../../../assets/loading.svg\" alt=\"Loading...\" />\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { AuthGuard } from '@auth0/auth0-angular';\n\nconst routes: Routes = [\n  {\n    path: 'error',\n    component: ErrorComponent,\n  },\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { Observable, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n})\nexport class ErrorComponent {\n\n  public error$: Observable<any> = this.auth.error$;\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    timer(0).pipe(takeUntil(this.error$)).subscribe(() => {\n      this.router.navigateByUrl('/');\n    });\n  }\n}\n\n","<div class=\"container mt-5\">\n<ng-container *ngIf=\"error$ | async as error\">\n  <h1>An error was returned from Auth0</h1>\n  <p>Something went wrong when trying to authorize your application. Please inspect the error below and ensure <code>auth_config.json</code> is configured correctly.</p>\n  <div class=\"alert alert-danger\" role=\"alert\">\n    {{error.error_description}}\n  </div>\n</ng-container>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}